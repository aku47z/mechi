---
import { Image } from "astro:assets";
const { img1, img2, title, text, materials } = Astro.props;
---

<article class="product-card">
  <Image
    src={img1}
    alt={title + " rug design"}
    width={400}
    class="img1 slide-from-left"
    loading={title === "Festive" ? "eager" : "lazy"}
  />
  <div id="info" class="fade-in">
    <h4 class="title-animate">{title}</h4>
    <p id="text">{text}</p>
    <p id="material">{materials}</p>
  </div>
  <Image
    src={img2}
    alt={title + " rug inspiration"}
    width={400}
    class="img2 slide-from-right"
  />
</article>

<style>
  article {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: 2rem;
    padding: 3.5rem 0;
    border-bottom: 1px solid #bababa;
  }

  #info {
    font-family: "General Sans", sans-serif;
    color: #656569;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    max-width: 24rem;
  }

  h4 {
    color: #1b1b1c;
    font-size: 2.2rem;
    font-style: normal;
    font-weight: 600;
    line-height: 130%; /* 2.6rem */
    letter-spacing: -0.015rem;
  }

  p {
    white-space: pre-wrap;
  }

  #text {
    font-weight: 400;
    line-height: 160%; /* 2rem */
  }

  #material {
    font-weight: 600;
    line-height: 160%; /* 2rem */
  }

  /* Animation styles */
  .product-card .slide-from-left,
  .product-card .slide-from-right,
  .product-card .fade-in,
  .product-card .title-animate {
    opacity: 0.1;
    transition:
      opacity 0.9s cubic-bezier(0.33, 1, 0.68, 1),
      transform 0.9s cubic-bezier(0.33, 1, 0.68, 1);
    will-change: opacity, transform;
  }

  .product-card .slide-from-left {
    transform: translateX(-30px);
  }

  .product-card .slide-from-right {
    transform: translateX(30px);
  }

  .product-card .title-animate {
    transform: translateY(15px);
  }

  /* Visible states */
  .product-card.visible .slide-from-left,
  .product-card.visible .slide-from-right,
  .product-card.visible .fade-in,
  .product-card.visible .title-animate {
    opacity: 1;
    transform: translate(0);
  }

  /* Subtle staggered animation for text content */
  .product-card.visible #text {
    transition-delay: 100ms;
  }

  .product-card.visible #material {
    transition-delay: 200ms;
  }

  @media screen and (max-width: 768px) {
    article {
      flex-direction: column;
      gap: 1.5rem;
      padding: 3rem 0 3rem 0;
    }

    .img1 {
      max-width: 82.5vw;
      align-self: center;
    }

    .img2 {
      display: none;
    }

    #info {
      max-width: 100vw;
      gap: 1rem;
    }

    h4 {
      font-size: 1.5rem;
    }

    p#text {
      white-space: inherit;
    }

    /* Adjust animations for mobile */
    .product-card .slide-from-left {
      transform: translateY(20px);
    }
  }
</style>

<script>
  // Wait for the component to be mounted
  document.addEventListener("DOMContentLoaded", () => {
    // Set up animation observer
    const productObserver = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            // Add visible class to trigger animations
            entry.target.classList.add("visible");

            // Stop observing once animation is triggered
            productObserver.unobserve(entry.target);
          }
        });
      },
      {
        threshold: 0.15, // Trigger when 15% of product is visible
        rootMargin: "0px 0px -10% 0px", // Trigger slightly before product is fully visible
      }
    );

    // Observe all product cards
    const productCards = document.querySelectorAll(".product-card");
    productCards.forEach((card) => {
      productObserver.observe(card);
    });
  });
</script>
